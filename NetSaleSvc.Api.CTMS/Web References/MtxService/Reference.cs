//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace NetSaleSvc.Api.CTMS.MtxService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ticketapiSoap11Binding", Namespace="http://webservice.main.cmts.cn")]
    public partial class ticketapi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCinemaPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanSiteStatisticOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LiveRealCheckSeatStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHallSiteAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHallOperationCompleted;
        
        private System.Threading.SendOrPostCallback SellTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOrderPayPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppPrintTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanSiteStateRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHallSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJsonSiteStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCinemaAllPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackSellGoodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHallAllSeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCinemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmSPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanCannotSellSeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeatureRulePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnLockOrderCenCinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanSiteStateQlJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanSiteStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCinemaPlanJsonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ticketapi() {
            this.Url = global::NetSaleSvc.Api.CTMS.Properties.Settings.Default.NetSaleSvc_Api_CTMS_MtxService_ticketapi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCinemaPlanCompletedEventHandler GetCinemaPlanCompleted;
        
        /// <remarks/>
        public event GetPlanSiteStatisticCompletedEventHandler GetPlanSiteStatisticCompleted;
        
        /// <remarks/>
        public event GetOrderStatusCompletedEventHandler GetOrderStatusCompleted;
        
        /// <remarks/>
        public event LiveRealCheckSeatStateCompletedEventHandler LiveRealCheckSeatStateCompleted;
        
        /// <remarks/>
        public event GetHallSiteAreaCompletedEventHandler GetHallSiteAreaCompleted;
        
        /// <remarks/>
        public event AddSPInfoCompletedEventHandler AddSPInfoCompleted;
        
        /// <remarks/>
        public event GetHallCompletedEventHandler GetHallCompleted;
        
        /// <remarks/>
        public event SellTicketCompletedEventHandler SellTicketCompleted;
        
        /// <remarks/>
        public event ModifyOrderPayPriceCompletedEventHandler ModifyOrderPayPriceCompleted;
        
        /// <remarks/>
        public event GetOrderMsgCompletedEventHandler GetOrderMsgCompleted;
        
        /// <remarks/>
        public event AppPrintTicketCompletedEventHandler AppPrintTicketCompleted;
        
        /// <remarks/>
        public event GetOrderStateCompletedEventHandler GetOrderStateCompleted;
        
        /// <remarks/>
        public event GetPlanSiteStateRuleCompletedEventHandler GetPlanSiteStateRuleCompleted;
        
        /// <remarks/>
        public event GetHallSiteCompletedEventHandler GetHallSiteCompleted;
        
        /// <remarks/>
        public event GetJsonSiteStateCompletedEventHandler GetJsonSiteStateCompleted;
        
        /// <remarks/>
        public event GetCinemaAllPlanCompletedEventHandler GetCinemaAllPlanCompleted;
        
        /// <remarks/>
        public event BackSellGoodsCompletedEventHandler BackSellGoodsCompleted;
        
        /// <remarks/>
        public event GetHallAllSeatCompletedEventHandler GetHallAllSeatCompleted;
        
        /// <remarks/>
        public event GetCinemaCompletedEventHandler GetCinemaCompleted;
        
        /// <remarks/>
        public event BackTicketCompletedEventHandler BackTicketCompleted;
        
        /// <remarks/>
        public event ConfirmSPInfoCompletedEventHandler ConfirmSPInfoCompleted;
        
        /// <remarks/>
        public event GetPlanCannotSellSeatCompletedEventHandler GetPlanCannotSellSeatCompleted;
        
        /// <remarks/>
        public event GetFeatureRulePriceCompletedEventHandler GetFeatureRulePriceCompleted;
        
        /// <remarks/>
        public event UnLockOrderCenCinCompletedEventHandler UnLockOrderCenCinCompleted;
        
        /// <remarks/>
        public event GetPlanSiteStateQlJsonCompletedEventHandler GetPlanSiteStateQlJsonCompleted;
        
        /// <remarks/>
        public event GetPlanSiteStateCompletedEventHandler GetPlanSiteStateCompleted;
        
        /// <remarks/>
        public event GetCinemaPlanJsonCompletedEventHandler GetCinemaPlanJsonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetCinemaPlan", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetCinemaPlan([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pPlanDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetCinemaPlan", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPlanDate,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCinemaPlanAsync(string pAppCode, string pCinemaID, string pPlanDate, string pTokenID, string pVerifyInfo) {
            this.GetCinemaPlanAsync(pAppCode, pCinemaID, pPlanDate, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetCinemaPlanAsync(string pAppCode, string pCinemaID, string pPlanDate, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetCinemaPlanOperationCompleted == null)) {
                this.GetCinemaPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCinemaPlanOperationCompleted);
            }
            this.InvokeAsync("GetCinemaPlan", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPlanDate,
                        pTokenID,
                        pVerifyInfo}, this.GetCinemaPlanOperationCompleted, userState);
        }
        
        private void OnGetCinemaPlanOperationCompleted(object arg) {
            if ((this.GetCinemaPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCinemaPlanCompleted(this, new GetCinemaPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPlanSiteStatistic", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPlanSiteStatistic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetPlanSiteStatistic", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanSiteStatisticAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pTokenID, string pVerifyInfo) {
            this.GetPlanSiteStatisticAsync(pAppCode, pCinemaID, pFeatureAppNo, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetPlanSiteStatisticAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetPlanSiteStatisticOperationCompleted == null)) {
                this.GetPlanSiteStatisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanSiteStatisticOperationCompleted);
            }
            this.InvokeAsync("GetPlanSiteStatistic", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pTokenID,
                        pVerifyInfo}, this.GetPlanSiteStatisticOperationCompleted, userState);
        }
        
        private void OnGetPlanSiteStatisticOperationCompleted(object arg) {
            if ((this.GetPlanSiteStatisticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanSiteStatisticCompleted(this, new GetPlanSiteStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetOrderStatus", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetOrderStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSerialNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetOrderStatus", new object[] {
                        pAppCode,
                        pCinemaID,
                        pSerialNum,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string pAppCode, string pCinemaID, string pSerialNum, string pTokenID, string pVerifyInfo) {
            this.GetOrderStatusAsync(pAppCode, pCinemaID, pSerialNum, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string pAppCode, string pCinemaID, string pSerialNum, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetOrderStatusOperationCompleted == null)) {
                this.GetOrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrderStatus", new object[] {
                        pAppCode,
                        pCinemaID,
                        pSerialNum,
                        pTokenID,
                        pVerifyInfo}, this.GetOrderStatusOperationCompleted, userState);
        }
        
        private void OnGetOrderStatusOperationCompleted(object arg) {
            if ((this.GetOrderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderStatusCompleted(this, new GetOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:LiveRealCheckSeatState", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string LiveRealCheckSeatState([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pXmlString) {
            object[] results = this.Invoke("LiveRealCheckSeatState", new object[] {
                        pXmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LiveRealCheckSeatStateAsync(string pXmlString) {
            this.LiveRealCheckSeatStateAsync(pXmlString, null);
        }
        
        /// <remarks/>
        public void LiveRealCheckSeatStateAsync(string pXmlString, object userState) {
            if ((this.LiveRealCheckSeatStateOperationCompleted == null)) {
                this.LiveRealCheckSeatStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLiveRealCheckSeatStateOperationCompleted);
            }
            this.InvokeAsync("LiveRealCheckSeatState", new object[] {
                        pXmlString}, this.LiveRealCheckSeatStateOperationCompleted, userState);
        }
        
        private void OnLiveRealCheckSeatStateOperationCompleted(object arg) {
            if ((this.LiveRealCheckSeatStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LiveRealCheckSeatStateCompleted(this, new LiveRealCheckSeatStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetHallSiteArea", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetHallSiteArea([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pHallID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetHallSiteArea", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHallSiteAreaAsync(string pAppCode, string pCinemaID, string pHallID, string pTokenID, string pVerifyInfo) {
            this.GetHallSiteAreaAsync(pAppCode, pCinemaID, pHallID, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetHallSiteAreaAsync(string pAppCode, string pCinemaID, string pHallID, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetHallSiteAreaOperationCompleted == null)) {
                this.GetHallSiteAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHallSiteAreaOperationCompleted);
            }
            this.InvokeAsync("GetHallSiteArea", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pTokenID,
                        pVerifyInfo}, this.GetHallSiteAreaOperationCompleted, userState);
        }
        
        private void OnGetHallSiteAreaOperationCompleted(object arg) {
            if ((this.GetHallSiteAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHallSiteAreaCompleted(this, new GetHallSiteAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AddSPInfo", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AddSPInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pXmlString) {
            object[] results = this.Invoke("AddSPInfo", new object[] {
                        pXmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSPInfoAsync(string pXmlString) {
            this.AddSPInfoAsync(pXmlString, null);
        }
        
        /// <remarks/>
        public void AddSPInfoAsync(string pXmlString, object userState) {
            if ((this.AddSPInfoOperationCompleted == null)) {
                this.AddSPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSPInfoOperationCompleted);
            }
            this.InvokeAsync("AddSPInfo", new object[] {
                        pXmlString}, this.AddSPInfoOperationCompleted, userState);
        }
        
        private void OnAddSPInfoOperationCompleted(object arg) {
            if ((this.AddSPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSPInfoCompleted(this, new AddSPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetHall", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetHall([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetHall", new object[] {
                        pAppCode,
                        pCinemaID,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHallAsync(string pAppCode, string pCinemaID, string pTokenID, string pVerifyInfo) {
            this.GetHallAsync(pAppCode, pCinemaID, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetHallAsync(string pAppCode, string pCinemaID, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetHallOperationCompleted == null)) {
                this.GetHallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHallOperationCompleted);
            }
            this.InvokeAsync("GetHall", new object[] {
                        pAppCode,
                        pCinemaID,
                        pTokenID,
                        pVerifyInfo}, this.GetHallOperationCompleted, userState);
        }
        
        private void OnGetHallOperationCompleted(object arg) {
            if ((this.GetHallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHallCompleted(this, new GetHallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:SellTicket", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string SellTicket([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pXmlString) {
            object[] results = this.Invoke("SellTicket", new object[] {
                        pXmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SellTicketAsync(string pXmlString) {
            this.SellTicketAsync(pXmlString, null);
        }
        
        /// <remarks/>
        public void SellTicketAsync(string pXmlString, object userState) {
            if ((this.SellTicketOperationCompleted == null)) {
                this.SellTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSellTicketOperationCompleted);
            }
            this.InvokeAsync("SellTicket", new object[] {
                        pXmlString}, this.SellTicketOperationCompleted, userState);
        }
        
        private void OnSellTicketOperationCompleted(object arg) {
            if ((this.SellTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SellTicketCompleted(this, new SellTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ModifyOrderPayPrice", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string ModifyOrderPayPrice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppPric, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBalancePric, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("ModifyOrderPayPrice", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pAppPric,
                        pBalancePric,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOrderPayPriceAsync(string pAppCode, string pCinemaID, string pOrderNO, string pAppPric, string pBalancePric, string pTokenID, string pVerifyInfo) {
            this.ModifyOrderPayPriceAsync(pAppCode, pCinemaID, pOrderNO, pAppPric, pBalancePric, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void ModifyOrderPayPriceAsync(string pAppCode, string pCinemaID, string pOrderNO, string pAppPric, string pBalancePric, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.ModifyOrderPayPriceOperationCompleted == null)) {
                this.ModifyOrderPayPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOrderPayPriceOperationCompleted);
            }
            this.InvokeAsync("ModifyOrderPayPrice", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pAppPric,
                        pBalancePric,
                        pTokenID,
                        pVerifyInfo}, this.ModifyOrderPayPriceOperationCompleted, userState);
        }
        
        private void OnModifyOrderPayPriceOperationCompleted(object arg) {
            if ((this.ModifyOrderPayPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOrderPayPriceCompleted(this, new ModifyOrderPayPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetOrderMsg", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetOrderMsg([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pValidCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetOrderMsg", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pValidCode,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderMsgAsync(string pAppCode, string pCinemaID, string pOrderNO, string pValidCode, string pVerifyInfo) {
            this.GetOrderMsgAsync(pAppCode, pCinemaID, pOrderNO, pValidCode, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetOrderMsgAsync(string pAppCode, string pCinemaID, string pOrderNO, string pValidCode, string pVerifyInfo, object userState) {
            if ((this.GetOrderMsgOperationCompleted == null)) {
                this.GetOrderMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderMsgOperationCompleted);
            }
            this.InvokeAsync("GetOrderMsg", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pValidCode,
                        pVerifyInfo}, this.GetOrderMsgOperationCompleted, userState);
        }
        
        private void OnGetOrderMsgOperationCompleted(object arg) {
            if ((this.GetOrderMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderMsgCompleted(this, new GetOrderMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AppPrintTicket", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AppPrintTicket([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pValidCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pRequestType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("AppPrintTicket", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pValidCode,
                        pRequestType,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppPrintTicketAsync(string pAppCode, string pCinemaID, string pOrderNO, string pValidCode, string pRequestType, string pTokenID, string pVerifyInfo) {
            this.AppPrintTicketAsync(pAppCode, pCinemaID, pOrderNO, pValidCode, pRequestType, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void AppPrintTicketAsync(string pAppCode, string pCinemaID, string pOrderNO, string pValidCode, string pRequestType, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.AppPrintTicketOperationCompleted == null)) {
                this.AppPrintTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppPrintTicketOperationCompleted);
            }
            this.InvokeAsync("AppPrintTicket", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pValidCode,
                        pRequestType,
                        pTokenID,
                        pVerifyInfo}, this.AppPrintTicketOperationCompleted, userState);
        }
        
        private void OnAppPrintTicketOperationCompleted(object arg) {
            if ((this.AppPrintTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppPrintTicketCompleted(this, new AppPrintTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetOrderState", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetOrderState([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSerialNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetOrderState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pSerialNum,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderStateAsync(string pAppCode, string pCinemaID, string pSerialNum, string pVerifyInfo) {
            this.GetOrderStateAsync(pAppCode, pCinemaID, pSerialNum, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetOrderStateAsync(string pAppCode, string pCinemaID, string pSerialNum, string pVerifyInfo, object userState) {
            if ((this.GetOrderStateOperationCompleted == null)) {
                this.GetOrderStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderStateOperationCompleted);
            }
            this.InvokeAsync("GetOrderState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pSerialNum,
                        pVerifyInfo}, this.GetOrderStateOperationCompleted, userState);
        }
        
        private void OnGetOrderStateOperationCompleted(object arg) {
            if ((this.GetOrderStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderStateCompleted(this, new GetOrderStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPlanSiteStateRule", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPlanSiteStateRule([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pPayType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetPlanSiteStateRule", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPayType,
                        pFeatureAppNo,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanSiteStateRuleAsync(string pAppCode, string pCinemaID, string pPayType, string pFeatureAppNo, string pVerifyInfo) {
            this.GetPlanSiteStateRuleAsync(pAppCode, pCinemaID, pPayType, pFeatureAppNo, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetPlanSiteStateRuleAsync(string pAppCode, string pCinemaID, string pPayType, string pFeatureAppNo, string pVerifyInfo, object userState) {
            if ((this.GetPlanSiteStateRuleOperationCompleted == null)) {
                this.GetPlanSiteStateRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanSiteStateRuleOperationCompleted);
            }
            this.InvokeAsync("GetPlanSiteStateRule", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPayType,
                        pFeatureAppNo,
                        pVerifyInfo}, this.GetPlanSiteStateRuleOperationCompleted, userState);
        }
        
        private void OnGetPlanSiteStateRuleOperationCompleted(object arg) {
            if ((this.GetPlanSiteStateRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanSiteStateRuleCompleted(this, new GetPlanSiteStateRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetHallSite", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetHallSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pHallID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetHallSite", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHallSiteAsync(string pAppCode, string pCinemaID, string pHallID, string pTokenID, string pVerifyInfo) {
            this.GetHallSiteAsync(pAppCode, pCinemaID, pHallID, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetHallSiteAsync(string pAppCode, string pCinemaID, string pHallID, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetHallSiteOperationCompleted == null)) {
                this.GetHallSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHallSiteOperationCompleted);
            }
            this.InvokeAsync("GetHallSite", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pTokenID,
                        pVerifyInfo}, this.GetHallSiteOperationCompleted, userState);
        }
        
        private void OnGetHallSiteOperationCompleted(object arg) {
            if ((this.GetHallSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHallSiteCompleted(this, new GetHallSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetJsonSiteState", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetJsonSiteState([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetJsonSiteState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetJsonSiteStateAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pVerifyInfo) {
            this.GetJsonSiteStateAsync(pAppCode, pCinemaID, pFeatureAppNo, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetJsonSiteStateAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pVerifyInfo, object userState) {
            if ((this.GetJsonSiteStateOperationCompleted == null)) {
                this.GetJsonSiteStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJsonSiteStateOperationCompleted);
            }
            this.InvokeAsync("GetJsonSiteState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pVerifyInfo}, this.GetJsonSiteStateOperationCompleted, userState);
        }
        
        private void OnGetJsonSiteStateOperationCompleted(object arg) {
            if ((this.GetJsonSiteStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJsonSiteStateCompleted(this, new GetJsonSiteStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetCinemaAllPlan", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetCinemaAllPlan([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetCinemaAllPlan", new object[] {
                        pAppCode,
                        pCinemaID,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCinemaAllPlanAsync(string pAppCode, string pCinemaID, string pTokenID, string pVerifyInfo) {
            this.GetCinemaAllPlanAsync(pAppCode, pCinemaID, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetCinemaAllPlanAsync(string pAppCode, string pCinemaID, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetCinemaAllPlanOperationCompleted == null)) {
                this.GetCinemaAllPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCinemaAllPlanOperationCompleted);
            }
            this.InvokeAsync("GetCinemaAllPlan", new object[] {
                        pAppCode,
                        pCinemaID,
                        pTokenID,
                        pVerifyInfo}, this.GetCinemaAllPlanOperationCompleted, userState);
        }
        
        private void OnGetCinemaAllPlanOperationCompleted(object arg) {
            if ((this.GetCinemaAllPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCinemaAllPlanCompleted(this, new GetCinemaAllPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:BackSellGoods", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string BackSellGoods([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pPayseqNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("BackSellGoods", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNo,
                        pPayseqNo,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackSellGoodsAsync(string pAppCode, string pCinemaID, string pOrderNo, string pPayseqNo, string pVerifyInfo) {
            this.BackSellGoodsAsync(pAppCode, pCinemaID, pOrderNo, pPayseqNo, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void BackSellGoodsAsync(string pAppCode, string pCinemaID, string pOrderNo, string pPayseqNo, string pVerifyInfo, object userState) {
            if ((this.BackSellGoodsOperationCompleted == null)) {
                this.BackSellGoodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackSellGoodsOperationCompleted);
            }
            this.InvokeAsync("BackSellGoods", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNo,
                        pPayseqNo,
                        pVerifyInfo}, this.BackSellGoodsOperationCompleted, userState);
        }
        
        private void OnBackSellGoodsOperationCompleted(object arg) {
            if ((this.BackSellGoodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackSellGoodsCompleted(this, new BackSellGoodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetHallAllSeat", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetHallAllSeat([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pHallID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetHallAllSeat", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHallAllSeatAsync(string pAppCode, string pCinemaID, string pHallID, string pVerifyInfo) {
            this.GetHallAllSeatAsync(pAppCode, pCinemaID, pHallID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetHallAllSeatAsync(string pAppCode, string pCinemaID, string pHallID, string pVerifyInfo, object userState) {
            if ((this.GetHallAllSeatOperationCompleted == null)) {
                this.GetHallAllSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHallAllSeatOperationCompleted);
            }
            this.InvokeAsync("GetHallAllSeat", new object[] {
                        pAppCode,
                        pCinemaID,
                        pHallID,
                        pVerifyInfo}, this.GetHallAllSeatOperationCompleted, userState);
        }
        
        private void OnGetHallAllSeatOperationCompleted(object arg) {
            if ((this.GetHallAllSeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHallAllSeatCompleted(this, new GetHallAllSeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetCinema", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetCinema([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetCinema", new object[] {
                        pAppCode,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCinemaAsync(string pAppCode, string pTokenID, string pVerifyInfo) {
            this.GetCinemaAsync(pAppCode, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetCinemaAsync(string pAppCode, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetCinemaOperationCompleted == null)) {
                this.GetCinemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCinemaOperationCompleted);
            }
            this.InvokeAsync("GetCinema", new object[] {
                        pAppCode,
                        pTokenID,
                        pVerifyInfo}, this.GetCinemaOperationCompleted, userState);
        }
        
        private void OnGetCinemaOperationCompleted(object arg) {
            if ((this.GetCinemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCinemaCompleted(this, new GetCinemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:BackTicket", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string BackTicket([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDesc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("BackTicket", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pDesc,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackTicketAsync(string pAppCode, string pCinemaID, string pOrderNO, string pDesc, string pTokenID, string pVerifyInfo) {
            this.BackTicketAsync(pAppCode, pCinemaID, pOrderNO, pDesc, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void BackTicketAsync(string pAppCode, string pCinemaID, string pOrderNO, string pDesc, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.BackTicketOperationCompleted == null)) {
                this.BackTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackTicketOperationCompleted);
            }
            this.InvokeAsync("BackTicket", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pDesc,
                        pTokenID,
                        pVerifyInfo}, this.BackTicketOperationCompleted, userState);
        }
        
        private void OnBackTicketOperationCompleted(object arg) {
            if ((this.BackTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackTicketCompleted(this, new BackTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ConfirmSPInfo", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string ConfirmSPInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pJsonString) {
            object[] results = this.Invoke("ConfirmSPInfo", new object[] {
                        pJsonString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmSPInfoAsync(string pJsonString) {
            this.ConfirmSPInfoAsync(pJsonString, null);
        }
        
        /// <remarks/>
        public void ConfirmSPInfoAsync(string pJsonString, object userState) {
            if ((this.ConfirmSPInfoOperationCompleted == null)) {
                this.ConfirmSPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmSPInfoOperationCompleted);
            }
            this.InvokeAsync("ConfirmSPInfo", new object[] {
                        pJsonString}, this.ConfirmSPInfoOperationCompleted, userState);
        }
        
        private void OnConfirmSPInfoOperationCompleted(object arg) {
            if ((this.ConfirmSPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmSPInfoCompleted(this, new ConfirmSPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPlanCannotSellSeat", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPlanCannotSellSeat([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSerial, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetPlanCannotSellSeat", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pSerial,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanCannotSellSeatAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pSerial, string pVerifyInfo) {
            this.GetPlanCannotSellSeatAsync(pAppCode, pCinemaID, pFeatureAppNo, pSerial, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetPlanCannotSellSeatAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pSerial, string pVerifyInfo, object userState) {
            if ((this.GetPlanCannotSellSeatOperationCompleted == null)) {
                this.GetPlanCannotSellSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanCannotSellSeatOperationCompleted);
            }
            this.InvokeAsync("GetPlanCannotSellSeat", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pSerial,
                        pVerifyInfo}, this.GetPlanCannotSellSeatOperationCompleted, userState);
        }
        
        private void OnGetPlanCannotSellSeatOperationCompleted(object arg) {
            if ((this.GetPlanCannotSellSeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanCannotSellSeatCompleted(this, new GetPlanCannotSellSeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetFeatureRulePrice", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetFeatureRulePrice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetFeatureRulePrice", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureNo,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeatureRulePriceAsync(string pAppCode, string pCinemaID, string pFeatureNo, string pVerifyInfo) {
            this.GetFeatureRulePriceAsync(pAppCode, pCinemaID, pFeatureNo, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetFeatureRulePriceAsync(string pAppCode, string pCinemaID, string pFeatureNo, string pVerifyInfo, object userState) {
            if ((this.GetFeatureRulePriceOperationCompleted == null)) {
                this.GetFeatureRulePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeatureRulePriceOperationCompleted);
            }
            this.InvokeAsync("GetFeatureRulePrice", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureNo,
                        pVerifyInfo}, this.GetFeatureRulePriceOperationCompleted, userState);
        }
        
        private void OnGetFeatureRulePriceOperationCompleted(object arg) {
            if ((this.GetFeatureRulePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeatureRulePriceCompleted(this, new GetFeatureRulePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:UnLockOrderCenCin", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string UnLockOrderCenCin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOrderNO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("UnLockOrderCenCin", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnLockOrderCenCinAsync(string pAppCode, string pCinemaID, string pOrderNO, string pTokenID, string pVerifyInfo) {
            this.UnLockOrderCenCinAsync(pAppCode, pCinemaID, pOrderNO, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void UnLockOrderCenCinAsync(string pAppCode, string pCinemaID, string pOrderNO, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.UnLockOrderCenCinOperationCompleted == null)) {
                this.UnLockOrderCenCinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnLockOrderCenCinOperationCompleted);
            }
            this.InvokeAsync("UnLockOrderCenCin", new object[] {
                        pAppCode,
                        pCinemaID,
                        pOrderNO,
                        pTokenID,
                        pVerifyInfo}, this.UnLockOrderCenCinOperationCompleted, userState);
        }
        
        private void OnUnLockOrderCenCinOperationCompleted(object arg) {
            if ((this.UnLockOrderCenCinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnLockOrderCenCinCompleted(this, new UnLockOrderCenCinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPlanSiteStateQlJson", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPlanSiteStateQlJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetPlanSiteStateQlJson", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanSiteStateQlJsonAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pVerifyInfo) {
            this.GetPlanSiteStateQlJsonAsync(pAppCode, pCinemaID, pFeatureAppNo, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetPlanSiteStateQlJsonAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pVerifyInfo, object userState) {
            if ((this.GetPlanSiteStateQlJsonOperationCompleted == null)) {
                this.GetPlanSiteStateQlJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanSiteStateQlJsonOperationCompleted);
            }
            this.InvokeAsync("GetPlanSiteStateQlJson", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pVerifyInfo}, this.GetPlanSiteStateQlJsonOperationCompleted, userState);
        }
        
        private void OnGetPlanSiteStateQlJsonOperationCompleted(object arg) {
            if ((this.GetPlanSiteStateQlJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanSiteStateQlJsonCompleted(this, new GetPlanSiteStateQlJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPlanSiteState", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPlanSiteState([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pFeatureAppNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTokenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetPlanSiteState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pTokenID,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanSiteStateAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pTokenID, string pVerifyInfo) {
            this.GetPlanSiteStateAsync(pAppCode, pCinemaID, pFeatureAppNo, pTokenID, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetPlanSiteStateAsync(string pAppCode, string pCinemaID, string pFeatureAppNo, string pTokenID, string pVerifyInfo, object userState) {
            if ((this.GetPlanSiteStateOperationCompleted == null)) {
                this.GetPlanSiteStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanSiteStateOperationCompleted);
            }
            this.InvokeAsync("GetPlanSiteState", new object[] {
                        pAppCode,
                        pCinemaID,
                        pFeatureAppNo,
                        pTokenID,
                        pVerifyInfo}, this.GetPlanSiteStateOperationCompleted, userState);
        }
        
        private void OnGetPlanSiteStateOperationCompleted(object arg) {
            if ((this.GetPlanSiteStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanSiteStateCompleted(this, new GetPlanSiteStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetCinemaPlanJson", RequestNamespace="http://webservice.main.cmts.cn", ResponseNamespace="http://webservice.main.cmts.cn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetCinemaPlanJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAppCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCinemaID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pPlanDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pVerifyInfo) {
            object[] results = this.Invoke("GetCinemaPlanJson", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPlanDate,
                        pVerifyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCinemaPlanJsonAsync(string pAppCode, string pCinemaID, string pPlanDate, string pVerifyInfo) {
            this.GetCinemaPlanJsonAsync(pAppCode, pCinemaID, pPlanDate, pVerifyInfo, null);
        }
        
        /// <remarks/>
        public void GetCinemaPlanJsonAsync(string pAppCode, string pCinemaID, string pPlanDate, string pVerifyInfo, object userState) {
            if ((this.GetCinemaPlanJsonOperationCompleted == null)) {
                this.GetCinemaPlanJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCinemaPlanJsonOperationCompleted);
            }
            this.InvokeAsync("GetCinemaPlanJson", new object[] {
                        pAppCode,
                        pCinemaID,
                        pPlanDate,
                        pVerifyInfo}, this.GetCinemaPlanJsonOperationCompleted, userState);
        }
        
        private void OnGetCinemaPlanJsonOperationCompleted(object arg) {
            if ((this.GetCinemaPlanJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCinemaPlanJsonCompleted(this, new GetCinemaPlanJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCinemaPlanCompletedEventHandler(object sender, GetCinemaPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCinemaPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCinemaPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPlanSiteStatisticCompletedEventHandler(object sender, GetPlanSiteStatisticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanSiteStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanSiteStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrderStatusCompletedEventHandler(object sender, GetOrderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void LiveRealCheckSeatStateCompletedEventHandler(object sender, LiveRealCheckSeatStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LiveRealCheckSeatStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LiveRealCheckSeatStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHallSiteAreaCompletedEventHandler(object sender, GetHallSiteAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHallSiteAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHallSiteAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddSPInfoCompletedEventHandler(object sender, AddSPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHallCompletedEventHandler(object sender, GetHallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SellTicketCompletedEventHandler(object sender, SellTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SellTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SellTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ModifyOrderPayPriceCompletedEventHandler(object sender, ModifyOrderPayPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOrderPayPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOrderPayPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrderMsgCompletedEventHandler(object sender, GetOrderMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AppPrintTicketCompletedEventHandler(object sender, AppPrintTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppPrintTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppPrintTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrderStateCompletedEventHandler(object sender, GetOrderStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPlanSiteStateRuleCompletedEventHandler(object sender, GetPlanSiteStateRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanSiteStateRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanSiteStateRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHallSiteCompletedEventHandler(object sender, GetHallSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHallSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHallSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetJsonSiteStateCompletedEventHandler(object sender, GetJsonSiteStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJsonSiteStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJsonSiteStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCinemaAllPlanCompletedEventHandler(object sender, GetCinemaAllPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCinemaAllPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCinemaAllPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BackSellGoodsCompletedEventHandler(object sender, BackSellGoodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackSellGoodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackSellGoodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHallAllSeatCompletedEventHandler(object sender, GetHallAllSeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHallAllSeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHallAllSeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCinemaCompletedEventHandler(object sender, GetCinemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCinemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCinemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void BackTicketCompletedEventHandler(object sender, BackTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConfirmSPInfoCompletedEventHandler(object sender, ConfirmSPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmSPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmSPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPlanCannotSellSeatCompletedEventHandler(object sender, GetPlanCannotSellSeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanCannotSellSeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanCannotSellSeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFeatureRulePriceCompletedEventHandler(object sender, GetFeatureRulePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeatureRulePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeatureRulePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnLockOrderCenCinCompletedEventHandler(object sender, UnLockOrderCenCinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnLockOrderCenCinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnLockOrderCenCinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPlanSiteStateQlJsonCompletedEventHandler(object sender, GetPlanSiteStateQlJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanSiteStateQlJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanSiteStateQlJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPlanSiteStateCompletedEventHandler(object sender, GetPlanSiteStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanSiteStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanSiteStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCinemaPlanJsonCompletedEventHandler(object sender, GetCinemaPlanJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCinemaPlanJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCinemaPlanJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591